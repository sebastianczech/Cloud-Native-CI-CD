apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: task-run-app
spec:
  steps:
    - name: pull-run-docker-container
      image: docker
      env:
      # Connect to the sidecar over TCP, with TLS.
      - name: DOCKER_HOST
        value: tcp://localhost:2376
      # Verify TLS.
      - name: DOCKER_TLS_VERIFY
        value: '1'
      # Use the certs generated by the sidecar daemon.
      - name: DOCKER_CERT_PATH
        value: /certs/client
      script: |
        #!/usr/bin/env sh
        set -e

        # #!/usr/bin/env bash
        cat > Dockerfile << EOF
        FROM ubuntu
        RUN apt-get update
        ENTRYPOINT ["echo", "hello"]
        EOF

        docker build -t hello . && docker run hello
        docker images

        docker pull sebaczech/python-localstack-client:main
        docker images
        docker run --name python-localstack-client --rm -e LOCALSTACK_HOST=172.17.0.2 sebaczech/python-localstack-client:main bash
      volumeMounts:
        - mountPath: /var/run/
          name: dind-socket
        - mountPath: /certs/client
          name: dind-certs
  sidecars:
    - image: docker:dind
      name: server
      args:
        - --storage-driver=vfs
        - --userland-proxy=false
        - --debug
      securityContext:
        privileged: true
      env:
      # Write generated certs to the path shared with the client.
        - name: DOCKER_TLS_CERTDIR
          value: /certs
      volumeMounts:
        - mountPath: /var/lib/docker
          name: dind-storage
        - mountPath: /var/run/
          name: dind-socket
        - mountPath: /certs/client
          name: dind-certs
      readinessProbe:
        periodSeconds: 1
        exec:
          command: ['ls', '/certs/client/ca.pem']
  volumes:
    - name: dind-storage
      emptyDir: {}
    - name: dind-socket
      emptyDir: {}
    - name: dind-certs
      emptyDir: {}